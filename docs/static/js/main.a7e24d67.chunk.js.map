{"version":3,"sources":["imageZoom.js","App.js","reportWebVitals.js","index.js"],"names":["rotate","keyframes","Figure","styled","figure","Img","img","ImageZoom","props","state","zoomed","position","imgData","e","x","y","offsetX","offsetY","zoomer","currentTarget","getBoundingClientRect","clientX","clientY","width","height","this","setState","zoomInPosition","toggleZoomImage","src","Error","Image","addEventListener","setTimeout","figureClass","figureZoomed","id","className","join","style","backgroundImage","backgroundSize","zoom","backgroundPosition","onClick","handleClick","onMouseMove","handleMove","onMouseLeave","handleLeave","alt","opacity","React","Component","defaultProps","App","year","Date","getFullYear","Helmet","charSet","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"guDAGA,IAAMA,EAASC,YAAH,KAKNC,EAASC,IAAOC,OAAV,IAkCSJ,GAgBfK,EAAMF,IAAOG,IAAV,KAKHC,E,kDAEF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,OAAQ,IACRC,SAAU,UACVC,QAAS,MALE,E,2DASJC,GAEX,IACIC,EAAEC,EAAEC,EAAQC,EADVC,EAASL,EAAEM,cAAcC,wBAE/BJ,EAAUH,EAAEQ,QAAUH,EAAOJ,EAC7BG,EAAUJ,EAAES,QAAUJ,EAAOH,EAC7BD,EAAIE,EAAQE,EAAOK,MAAM,IACzBR,EAAIE,EAAQC,EAAOM,OAAO,IAC1BC,KAAKC,SAAS,CAAEf,SAAS,GAAD,OAAKG,EAAL,aAAWC,EAAX,S,sCASZF,GACe,MAAtBY,KAAKhB,MAAMC,OAEZe,KAAKC,SAAS,CAAEhB,OAAQ,OAGxBe,KAAKC,SAAS,CAAEhB,OAAQ,MACxBe,KAAKE,eAAed,M,kCAIhBA,GAERY,KAAKG,gBAAgBf,K,iCAGdA,GAEoB,MAAtBY,KAAKhB,MAAMC,QACZe,KAAKE,eAAed,K,oCAMxBY,KAAKC,SAAS,CAAEhB,OAAQ,IAAKC,SAAU,c,0CAGtB,IAAD,OAEhB,GAAwB,KAAnBc,KAAKjB,MAAMqB,KAAgC,MAAlBJ,KAAKjB,MAAMqB,IACrC,MAAM,IAAIC,MAAM,4DAGpBL,KAAKC,SAAS,CAAEhB,OAAQ,MACxB,IAAIJ,EAAM,IAAIyB,MACdzB,EAAIuB,IAAMJ,KAAKjB,MAAMqB,IACrBvB,EAAI0B,iBAAiB,QAAQ,WACzBC,YAAW,WACP,EAAKP,SAAS,CAAEhB,OAAQ,MACxB,EAAKgB,SAAS,CAAEd,QAASN,EAAIuB,QAC9B,U,+BAKD,IAAD,OACDK,EAAcT,KAAKhB,MAAMG,QAAU,SAAW,UAC9CuB,EAAqC,MAAtBV,KAAKhB,MAAMC,OAAiB,SAAW,WAC1D,OACI,cAACR,EAAD,CAAQkC,GAAIX,KAAKjB,MAAM4B,GAAIC,UAAW,CAACH,EAAaC,EAAcV,KAAKjB,MAAM6B,WAAWC,KAAK,KAAMC,MAAO,CAAEC,gBAAiB,OAAOf,KAAKhB,MAAMG,QAAQ,IAAK6B,eAAgBhB,KAAKjB,MAAMkC,KAAK,IAAKC,mBAAoBlB,KAAKhB,MAAME,UAAYiC,QAAU,SAAA/B,GAAC,OAAI,EAAKgC,YAAYhC,IAAKiC,YAAc,SAAAjC,GAAC,OAAI,EAAKkC,WAAWlC,IAAKmC,aAAe,kBAAM,EAAKC,eAAnV,SACR,cAAC5C,EAAD,CAAK+B,GAAG,YAAYP,IAAKJ,KAAKhB,MAAMG,QAASsC,IAAKzB,KAAKjB,MAAM0C,IAAKX,MAAO,CAACY,QAAS1B,KAAKhB,MAAMC,QAASa,MAAOE,KAAKjB,MAAMe,MAAOC,OAAQC,KAAKjB,MAAMgB,e,GA/E/H4B,IAAMC,WAqF9B9C,EAAU+C,aAAe,CACrBZ,KAAM,MACNQ,IAAK,6BACL3B,MAAO,OACPC,OAAQ,QAGGjB,QC5EAgD,MA3Ef,WACE,IAAIC,EAAO,IAAIC,KAEf,OADAD,EAAOA,EAAKE,cAEV,sBAAKrB,UAAU,MAAf,UACE,eAACsB,EAAA,EAAD,WACE,sBAAMC,QAAQ,UACd,oEAGF,mCACE,8CACA,kJACA,wDAA0B,uBAA1B,6BAAyD,mBAAGC,KAAK,4CAA4CC,OAAO,SAASC,IAAI,aAAxE,uBAAzD,UAGF,cAAC,EAAD,CAAW1B,UAAU,gBAAgBR,IAAI,2CAA2CqB,IAAI,wCAAwCR,KAAK,MAAMnB,MAAM,OAAOC,OAAO,SAG/J,sBAAKa,UAAU,YAAf,UACE,8CAEA,6QAEA,+HAEA,sBAAKA,UAAU,UAAf,UACE,cAAC,EAAD,CAAWA,UAAU,cAAcR,IAAI,2CAA2CqB,IAAI,0CACtF,cAAC,EAAD,CAAWb,UAAU,cAAcR,IAAI,2CAA2CqB,IAAI,0CACtF,cAAC,EAAD,CAAWb,UAAU,cAAcR,IAAI,2CAA2CqB,IAAI,0CACtF,cAAC,EAAD,CAAWb,UAAU,cAAcR,IAAI,2CAA2CqB,IAAI,6CAGxF,+CAEA,0IAA4G,iCAAQ,4CAApH,2FAEA,cAAC,EAAD,CAAWrB,IAAI,kCAAkCqB,IAAI,0CAErD,mIAIA,+JAAiI,2CAAjI,YAAgK,4CAAhK,eAAmM,yCAAnM,+CAEA,mFAAqD,wCAArD,QAA6E,+CAA7E,4JAAgQ,6CAAhQ,QAA6R,4CAA7R,gEAAiX,8CAAjX,QAA+Y,4CAA/Y,yLAEA,wEAEA,sBAAKb,UAAU,eAAf,UACA,cAAC,EAAD,CAAWA,UAAU,cAAcR,IAAI,2CAA2CqB,IAAI,wCAAwCR,KAAK,QACjI,cAAC,EAAD,CAAWL,UAAU,cAAcR,IAAI,2CAA2CqB,IAAI,wCAAwCR,KAAK,QACnI,cAAC,EAAD,CAAWL,UAAU,cAAcR,IAAI,2CAA2CqB,IAAI,wCAAwCR,KAAK,QACnI,cAAC,EAAD,CAAWL,UAAU,cAAcR,IAAI,2CAA2CqB,IAAI,wCAAwCR,KAAK,WAGrI,kEACgD,uBADhD,kJAEiM,uBAFjM,kJAGiM,uBAHjM,kJAIiM,uBAJjM,kJAKiM,uBALjM,eAWF,6DACoB,mBAAGmB,KAAK,iCAAiCC,OAAO,SAASC,IAAI,aAA7D,6BADpB,SACkHP,SC5DzGQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a7e24d67.chunk.js","sourcesContent":["import React from 'react';\nimport styled, {keyframes} from \"styled-components\";\n\nconst rotate = keyframes`\n    from { transform: rotate(0deg); }\n    to {transform: rotate(360deg);}\n`;\n\nconst Figure = styled.figure`\n    background-position: 50% 50%;\n\tposition: relative;\n    width: auto;\n\toverflow: hidden;\n    cursor: zoom-in;\n    min-height: 25vh;\n    background-color: #eee;\n    margin: 0;\n    &:before {\n        content: \"\";\n        background-color: transparent;\n        position: absolute;\n        top: 0;\n        left: 0;\n        right: 0;\n        width: 100%;\n        height: 100%;\n        opacity: 1;\n        transition: opacity 0.2s ease-in-out;\n        z-index: 1;\n    }\n    &:after {\n        content: \"\";\n        position: absolute;\n        top: calc(50% - 25px);\n        left: calc(50% - 25px);\n        width: 50px;\n        height: 50px;\n        border-radius: 50%;\n        border: 5px solid transparent;\n        border-top-color: #333;\n        border-right-color: #333;\n        border-bottom-color: #333;\n        animation: ${rotate} 2s linear infinite;\n        opacity: 1;\n        transition: opacity 0.2s ease-in-out;\n        z-index: 2;\n    }\n    &.loaded {\n        min-height: auto;\n        &:before {\n            opacity: 0;\n        }\n        &:after {\n            opacity: 0;\n        }\n    }\n`;\n\nconst Img = styled.img`\n    transition: opacity .8s;\n\tdisplay: block;\n`;\n\nclass ImageZoom extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            zoomed: \"1\",\n            position: \"50% 50%\",\n            imgData: null\n        }\n    }\n\n    zoomInPosition(e){\n        // this will handle the calculations of the area where the image needs to zoom in depending on the user interaction\n        const zoomer = e.currentTarget.getBoundingClientRect();\n        let x,y,offsetX,offsetY;\n        offsetX = e.clientX - zoomer.x;\n        offsetY = e.clientY - zoomer.y;\n        x = offsetX/zoomer.width*100;\n        y = offsetY/zoomer.height*100;\n        this.setState({ position: `${x}% ${y}%`});\n        // OLD JQUERY CODE\n        // e.offsetX ? offsetX = e.offsetX : offsetX = e.touches[0].pageX;\n        // e.offsetY ? offsetY = e.offsetY : offsetY = e.touches[0].pageX;\n        // console.log({offsetX, offsetY});\n        // x = offsetX/zoomer.offsetWidth*100;\n        // y = offsetY/zoomer.offsetHeight*100;\n    }\n\n    toggleZoomImage(e) {\n        if ( this.state.zoomed === \"0\" ) {\n            // zoom out\n            this.setState({ zoomed: \"1\" });\n        } else {\n            //zoom in and set the background position correctly\n            this.setState({ zoomed: \"0\" });\n            this.zoomInPosition(e);\n        }\n    }\n\n    handleClick(e) {\n        // Handle the click events\n        this.toggleZoomImage(e);\n    }\n\n    handleMove(e) {\n        // Handle the mouse move events\n        if ( this.state.zoomed === \"0\" ) {\n            this.zoomInPosition(e);\n        }\n    }\n\n    handleLeave() {\n        // Resets the state of the component on mouse leave\n        this.setState({ zoomed: \"1\", position: \"50% 50%\" });\n    }\n\n    componentDidMount() {\n        // This checks if the prop src was passed when the component was called and throw an error if this is null or set to empty\n        if ( this.props.src === \"\" || this.props.src == null ) {\n            throw new Error('Prop src must be defined when using ImageZoom component!');\n        }\n\n        this.setState({ zoomed: \"0\" });\n        let img = new Image();\n        img.src = this.props.src;\n        img.addEventListener(\"load\", () => {\n            setTimeout(() => {\n                this.setState({ zoomed: \"1\" });\n                this.setState({ imgData: img.src });\n            }, 200);\n        });\n\n    }\n\n    render() {\n        let figureClass = this.state.imgData ? 'loaded' : 'loading';\n        let figureZoomed = this.state.zoomed === \"0\" ? \"zoomed\" : \"fullView\";\n        return(\n            <Figure id={this.props.id} className={[figureClass, figureZoomed, this.props.className].join(' ')} style={{ backgroundImage: \"url(\"+this.state.imgData+\")\", backgroundSize: this.props.zoom+\"%\", backgroundPosition: this.state.position }} onClick={ e => this.handleClick(e) } onMouseMove={ e => this.handleMove(e) } onMouseLeave={ () => this.handleLeave() }>\n\t\t\t\t<Img id=\"imageZoom\" src={this.state.imgData} alt={this.props.alt} style={{opacity: this.state.zoomed}} width={this.props.width} height={this.props.height} />\n\t\t\t</Figure>\n            );\n    }\n}\n\nImageZoom.defaultProps = {\n    zoom: \"200\",\n    alt: \"This is an imageZoom image\",\n    width: \"100%\",\n    height: \"auto\"\n}\n\nexport default ImageZoom","import './App.css';\nimport Helmet from \"react-helmet\";\nimport ImageZoom from \"./imageZoom\";\n\nfunction App() {\n  let year = new Date();\n  year = year.getFullYear();\n  return (\n    <div className=\"App\">\n      <Helmet>\n        <meta charSet=\"utf-8\" />\n        <title>React Image Zoom - Demo Page</title>\n      </Helmet>\n\n      <header>\n        <h1>&lt;ImageZoom&#x0002F;&gt;</h1>\n        <p>Simple React component that will allow users to zoom in on your images, perfect for product images and galleries!</p>\n        <p>Small and light weight!<br/>Give it a try and see the <a href=\"https://github.com/Mario-Duarte/ImageZoom\" target=\"_blank\" rel=\"noreferrer\">docs here</a>.</p>\n      </header>\n\n      <ImageZoom className=\"fullImageZoom\" src=\"https://picsum.photos/seed/000/1920/1080\" alt=\"A image to apply the ImageZoom plugin\" zoom=\"250\" width=\"100%\" height=\"auto\" />\n\n      \n      <div className=\"container\">\n        <h3>How it works</h3>\n\n        <p>This component allows users to click/tap to zoom-in on an image, pan around to inspect the details and click again to zoom-out, moving the focus out of the image will also reset the zoom. This component also has a image loader built in.</p>\n\n        <p>Bellow is an example of a standard image gallery using the component with a default 200% zoom:</p>\n\n        <div className=\"gallery\">\n          <ImageZoom className=\"gallery-img\" src=\"https://picsum.photos/seed/005/1920/1080\" alt=\"A image to apply the ImageZoom plugin\" />\n          <ImageZoom className=\"gallery-img\" src=\"https://picsum.photos/seed/002/1920/1080\" alt=\"A image to apply the ImageZoom plugin\" />\n          <ImageZoom className=\"gallery-img\" src=\"https://picsum.photos/seed/003/1920/1080\" alt=\"A image to apply the ImageZoom plugin\" />\n          <ImageZoom className=\"gallery-img\" src=\"https://picsum.photos/seed/004/1920/1080\" alt=\"A image to apply the ImageZoom plugin\" />\n        </div>\n\n        <h3>How to use it</h3>\n\n        <p>The imageZoom component works very similar to the default img tag in HTML, just pass in a src attribute (<strong><i>mandatory</i></strong>) with the image url you wan to use and it will render a working imageZoom component.</p>\n\n        <ImageZoom src=\"https://picsum.photos/1920/1080\" alt=\"A image to apply the ImageZoom plugin\" />\n\n        <code>\n          &lt;ImageZoom src=&quot;https://picsum.photos/1920/1080&quot; alt=&quot;A image to apply the ImageZoom plugin&quot; /&gt;\n        </code>\n\n        <p>By default the component will set a zoom of 200% on the image if no attribute was set, it will also set default values to the <strong>width</strong> (100%), <strong>height</strong> (auto) and <strong>alt</strong> (This is an imageZoom image) attributes.</p>\n\n        <p>You can also pass in secondary attributes such as <strong>id</strong> and <strong>className</strong> to enable you to style the component more easily, in addition to these, the component will also update it's className based on it's state, for example, <strong>loading</strong> and <strong>loaded</strong> for when the component is downloading the image passed, and <strong>fullView</strong> and <strong>zoomed</strong> for when the user zooms in on the image. These can be easily targeted in conjunction with the attribute className to adapt the style of the component depending of implementation.</p>\n\n        <p>Here is an example of a custom gallery:</p>\n\n        <div className=\"demo-gallery\">\n        <ImageZoom className=\"gallery-img\" src=\"https://picsum.photos/seed/006/1920/1080\" alt=\"A image to apply the ImageZoom plugin\" zoom=\"300\" />\n          <ImageZoom className=\"gallery-img\" src=\"https://picsum.photos/seed/007/1920/1080\" alt=\"A image to apply the ImageZoom plugin\" zoom=\"300\" />\n          <ImageZoom className=\"gallery-img\" src=\"https://picsum.photos/seed/008/1920/1080\" alt=\"A image to apply the ImageZoom plugin\" zoom=\"300\" />\n          <ImageZoom className=\"gallery-img\" src=\"https://picsum.photos/seed/009/1920/1080\" alt=\"A image to apply the ImageZoom plugin\" zoom=\"300\" />\n        </div>\n\n        <code>\n          &lt;div className=&quot;demo-gallery&quot;&gt;<br/>\n          &nbsp;&lt;ImageZoom className=&quot;gallery-img&quot; src=&quot;https://picsum.photos/seed/006/1920/1080&quot; alt=&quot;A image to apply the ImageZoom plugin&quot; zoom=&quot;300&quot; /&gt;<br/>\n          &nbsp;&lt;ImageZoom className=&quot;gallery-img&quot; src=&quot;https://picsum.photos/seed/007/1920/1080&quot; alt=&quot;A image to apply the ImageZoom plugin&quot; zoom=&quot;300&quot; /&gt;<br/>\n          &nbsp;&lt;ImageZoom className=&quot;gallery-img&quot; src=&quot;https://picsum.photos/seed/008/1920/1080&quot; alt=&quot;A image to apply the ImageZoom plugin&quot; zoom=&quot;300&quot; /&gt;<br/>\n          &nbsp;&lt;ImageZoom className=&quot;gallery-img&quot; src=&quot;https://picsum.photos/seed/009/1920/1080&quot; alt=&quot;A image to apply the ImageZoom plugin&quot; zoom=&quot;300&quot; /&gt;<br/>\n          &lt;/div&gt;\n        </code>\n\n      </div>\n\n      <footer>\n        Created with ♥ by <a href=\"https://www.marioduarte.co.uk/\" target=\"_blank\" rel=\"noreferrer\">Mário Duarte</a> © {year}\n      </footer>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}